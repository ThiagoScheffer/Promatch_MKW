// PC HUD - MP

#include "ui/menudef.h"

#define TEAM_IS_MARINES		(localVarString( ui_team ) == "marines")
#define TEAM_IS_OPFOR		(localVarString( ui_team ) == "opfor")

#define RANK_ORIGIN 0 6
#define ONLINEGAME (dvarInt( "onlinegame" ) && !dvarInt( "xblive_privatematch" ) )
#define ONLINEGAME_OFFSET 10

#define FLASH_OFS 	((sin(milliseconds()/90))*2)
#define FLASH_OFS2 	((sin(milliseconds()/90))*4)

#define HUD_ALPHA 0.65
#define HUD_FOREGROUND_ALPHA 0.75
#define DPAD_ICON_ALPHA 0.65

#define NOT_SPECTATING (!spectatingClient())
#define SPECTATING (spectatingClient())

#define WIDESCREEN_OFFSET			107 0

#define OBJICON( teamName, idx, texture, dvarName, showValue ) \
	itemDef \
	{ \
		style			WINDOW_STYLE_SHADER \
		rect			(30*idx) -74 24 24 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM \
		exp				rect X( (30*idx) - ((FLASH_OFS) * dvarInt( dvarName+"_flash" )) ) \
		exp				rect Y( -74 - ((FLASH_OFS) * dvarInt( dvarName+"_flash" )) ) \
		exp				rect W( 24 + (FLASH_OFS2 * dvarInt( dvarName+"_flash" )) ) \
		exp				rect H( 24 + (FLASH_OFS2 * dvarInt( dvarName+"_flash" )) ) \
		origin			20 0 \
		background		texture \
		forecolor		1 1 1 0.61 \
		visible			when( dvarString( dvarName ) == showValue && team( name ) == teamName ); \
		decoration \
	}

#define	SCOREBAR_BORDER( setting, alliesColor, axisColor ) \
	itemDef \
	{ \
		style			WINDOW_STYLE_FILLED \
		rect			36 -36 80 12 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM \
		forecolor		0 0 0 0 \
		border			1 \
		bordercolor		alliesColor 1 \
		bordersize		2 \
		visible when ( (tableLookup( "mp/mapsTable.csv", 0, dvarString( "mapname" ), 1 ) == setting) && team( name ) == "TEAM_ALLIES" ); \
		decoration \
	} \
	itemDef \
	{ \
		style			WINDOW_STYLE_FILLED \
		rect			36 -36 80 12 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM \
		forecolor		0 0 0 0 \
		border			1 \
		bordercolor		axisColor 1 \
		bordersize		2 \
		visible when ( (tableLookup( "mp/mapsTable.csv", 0, dvarString( "mapname" ), 1 ) == setting) && team( name ) == "TEAM_AXIS" ); \
		decoration \
	}


#define	BOTTOM_RECT_X 0
#define	BOTTOM_RECT_Y 0

#define MINIMAP_ORIGIN 6 6
{
	assetGlobalDef
	{
		fadeClamp		1					// sets the fadeup alpha
		fadeCycle		1					// how often fade happens in milliseconds
		fadeAmount		0.1					// amount to adjust alpha per cycle
	}
	// Low health overlay
	menuDef
	{
		name			"Low Health"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible			when(team( name ) != "TEAM_SPECTATOR" || spectatingClient())
		itemDef
		{
			name			"healthoverlay"
			rect			0 0 640 480
			forecolor		1 1 1 1
			background		"overlay_low_health"
			ownerdraw		CG_PLAYER_LOW_HEALTH_OVERLAY
			visible			0
			decoration
		}
	}
	
	// Cursor hints
	menuDef
	{
		name			"Cursorhints"
		rect			0 60 40 40 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible			when( dvarInt( ui_hud_hardcore ) == 0 && !ui_active() )

		itemDef
		{
			name			"chRect"
			rect			0 0 40 40 // 64x64
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_CURSORHINT
			visible			when( NOT_SPECTATING )
			decoration
		}
	}

#define STATS_WIDTH 140
#define STATS_CAT1  18
#define STATS_CAT2  21
#define STATS_VALUE 12
#define STATS_FONT_SCALE 0.25
#define STATS_TRANSPARENCY 1
	
// REALTIME DEBUGGER - usado como hit display
/*	menuDef
	{
    	name			"stance"
    	rect			BOTTOM_RECT_X 200 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
    	fullScreen		0
		visible 0

		itemDef
		{
			style             WINDOW_STYLE_SHADER
			rect              (STATS_WIDTH*-1+13) 13 (STATS_WIDTH-15) 130 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			background        "black"
			forecolor         .2 .2 .2 (STATS_TRANSPARENCY-0.2)
			border             0
			visible            1     
			decoration
		}
		
		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			(STATS_WIDTH*-1+STATS_CAT1) 22 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( "^3Hit Display Information" );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_LEFT
			forecolor		1 1 1 STATS_TRANSPARENCY
			visible			1
			decoration	
		}
		
		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			(STATS_WIDTH*-1+STATS_CAT1) 37 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( "Loc:  " + dvarstring(ui_hitloc_0 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_LEFT
			forecolor		1 1 1 STATS_TRANSPARENCY
			visible			1
			decoration	
		}		

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			-STATS_VALUE 37 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( dvarstring( ui_hitloc_damage_0 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_RIGHT
			forecolor		1 1 0 STATS_TRANSPARENCY
			visible			1
			decoration	
		}	

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			(STATS_WIDTH*-1+STATS_CAT1) 52 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( "Loc:  " + dvarstring(ui_hitloc_1 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_LEFT
			forecolor		1 1 1 STATS_TRANSPARENCY
			visible			1
			decoration	
		}		

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			-STATS_VALUE 52 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( dvarstring( ui_hitloc_damage_1 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_RIGHT
			forecolor		1 1 0 STATS_TRANSPARENCY
			visible			1
			decoration	
		}	

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			(STATS_WIDTH*-1+STATS_CAT1) 67 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( "Loc:  " + dvarstring(ui_hitloc_2 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_LEFT
			forecolor		1 1 1 STATS_TRANSPARENCY
			visible			1
			decoration	
		}		

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			-STATS_VALUE 67 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( dvarstring( ui_hitloc_damage_2 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_RIGHT
			forecolor		1 1 0 STATS_TRANSPARENCY
			visible			1
			decoration	
		}	

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			(STATS_WIDTH*-1+STATS_CAT1) 82 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( "Loc:  " + dvarstring(ui_hitloc_3 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_LEFT
			forecolor		1 1 1 STATS_TRANSPARENCY
			visible			1
			decoration	
		}		

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			-STATS_VALUE 82 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( dvarstring( ui_hitloc_damage_3 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_RIGHT
			forecolor		1 1 0 STATS_TRANSPARENCY
			visible			1
			decoration	
		}			

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			(STATS_WIDTH*-1+STATS_CAT1) 97 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( "Loc:  " + dvarstring(ui_hitloc_4 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_LEFT
			forecolor		1 1 1 STATS_TRANSPARENCY
			visible			1
			decoration	
		}		

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			-STATS_VALUE 97 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( dvarstring( ui_hitloc_damage_4 ) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_RIGHT
			forecolor		1 1 0 STATS_TRANSPARENCY
			visible			1
			decoration	
		}		
						
		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			(STATS_WIDTH*-1+STATS_CAT1) 112 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( "Loc:  " + dvarstring(ui_hitloc_5) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_LEFT
			forecolor		1 1 1 STATS_TRANSPARENCY
			visible			1
			decoration	
		}		

		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			-STATS_VALUE 112 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			exp			text( dvarstring( ui_hitloc_damage_5) );
			textfont		UI_FONT_NORMAL
			textscale		STATS_FONT_SCALE
			textAlign		ITEM_ALIGN_MIDDLE_RIGHT
			forecolor		1 1 0 STATS_TRANSPARENCY
			visible			1
			decoration	
		}			

		
	}//END HITDEBUG
*/
	#define ALLIES_HAVE_UAV (dvarint( ui_uav_allies ) && team( name ) == "TEAM_ALLIES" )
	#define AXIS_HAVE_UAV (dvarint( ui_uav_axis ) && team( name ) == "TEAM_AXIS" )
	#define CLIENT_HAS_UAV (dvarint( ui_uav_client ) && team( name ) == "TEAM_FREE" )
	//COMPASS_SIZE_MP = 125
	
	#define RECT_COMPASS 0 0 COMPASS_SIZE_MP COMPASS_SIZE_MP HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	#undef MINIMAP_ORIGIN
	#define MINIMAP_ORIGIN 	2 -2 //2 2

	/*
	#define COMPASS_SIZE_MP		125
	#define MINIMAP_X_MP			0
	#define MINIMAP_Y_MP			12
	#define MINIMAP_W_MP			102
	#define	MINIMAP_H_MP			102
	*/
	
	//#undef MINIMAP_W_MP
	//#define MINIMAP_W_MP 120
	//===============MAPA===============

	
	menuDef
	{
		name			"Compass_old"
 	   	rect			RECT_COMPASS
 	   	fullScreen		0
		visible 		when ( !inkillcam() && !flashbanged() && !ui_active() && !scoped() && dvarString( createfx ) != "on" && ( team( name ) != "TEAM_SPECTATOR" ) );
		
		//------------------------------------------------------------------
		//background vivosmortos
		/*itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			MINIMAP_X_MP (MINIMAP_Y_MP + 105) MINIMAP_W_MP 14 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			MINIMAP_ORIGIN
			background	   "black"
			forecolor		1 1 1 0.4
			border			0
			visible			when (stat(3168) == 0);
			decoration
		}
		//texto vivos
		itemDef
		{
			rect		(MINIMAP_X_MP + 18) (MINIMAP_Y_MP + 120) 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		MINIMAP_ORIGIN
			exp text	("VIVOS");
			textfont	UI_FONT_OBJECTIVE
			textscale	0.25
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when (stat(3168) == 0);
			decoration
		}
		
		
		//axis var
		itemDef
		{
			rect		(MINIMAP_X_MP + 58) (MINIMAP_Y_MP + 120) 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		MINIMAP_ORIGIN
			exp text	(dvarint(ui_aliveaxis));
			textfont	UI_FONT_OBJECTIVE
			textscale	0.30
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when (stat(3168) == 0);
			decoration
		}
		//axisicone
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			(MINIMAP_X_MP + 38) (MINIMAP_Y_MP + 104) 16 16 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			MINIMAP_ORIGIN
			exp				material( dvarString( "g_TeamIcon_Axis" ) );
			background		"hud_xpticker480ws"
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			visible			when (stat(3168) == 0);
			decoration
		}
		
		
		//alliesicone
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			(MINIMAP_X_MP + 70) (MINIMAP_Y_MP + 104) 16 16 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			MINIMAP_ORIGIN
			//exp				material( dvarString( "hud_xpticker480" ) );
			background		"hud_xpticker480"
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			visible			when (stat(3168) == 0);
			decoration
		}
		//alliesvar
		itemDef
		{
			rect		(MINIMAP_X_MP + 95) (MINIMAP_Y_MP + 120) 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		MINIMAP_ORIGIN
			exp text	(dvarint(ui_aliveallies));
			textfont	UI_FONT_OBJECTIVE
			textscale	0.30
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when (stat(3168) == 0);
			decoration
		}
		//------------------------------------------------------------------
		//modo perto do ticktaper tela
		
		//axisbottom
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			-85 220 16 16 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			origin			0 0
			exp				material( dvarString( "g_TeamIcon_Axis" ) );
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			visible			when (stat(3168) == 1)
			decoration
		}
		
		//axisvar
		itemDef
		{
			rect		-65 238 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			origin		0 0
			exp text	(dvarint(ui_aliveaxis));
			textfont	UI_FONT_OBJECTIVE
			textscale	0.30
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when (stat(3168) == 1);
			decoration
		}		
		//alliesbottom
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			72 220 16 16 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			origin			0 0
			exp				material( dvarString( "g_TeamIcon_Allies" ) );
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			visible			when (stat(3168) == 1)
			decoration
		}
		
		//alliesvar
		itemDef
		{
			rect		0 238 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			origin		64 0
			exp text	(dvarint(ui_aliveallies));
			textfont	UI_FONT_OBJECTIVE
			textscale	0.30
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when (stat(3168) == 1);
			decoration
		}
		*/
		
		// PLAYERS
		//Width Comprimento ---
		#define DEADALIVE_WIDTH 220
		#define DEADALIVE_OFFSET (DEADALIVE_WIDTH-256)
		//Height Largura CimaBaixo
		#define DEADALIVE_HEIGHT 15
		#define DEADALIVE_Y 0
		#define DEADALIVE_FONT_SIZE 0.32
		
		#define DEADALIVE_RIGHT 20 220
		#define DEADALIVE_LEFT -40 220
						
		// ALLIES PLAYERS
		//#define LB_ALLIES_OFFSET 0 -165
		#define LB_ALLIES_PLAYER( playerItem, playerName, playerHealth ) \
		itemDef \
		{ \
			style				WINDOW_STYLE_SHADER \
			rect				(((playerItem-1)*(DEADALIVE_HEIGHT+1))) DEADALIVE_Y  DEADALIVE_HEIGHT DEADALIVE_HEIGHT HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER \
			origin			DEADALIVE_RIGHT \
			background	"hud_xpticker480" \
			forecolor		1 1 1 .9 \			
			border			0 \
			visible			when (dvarString(playerName)!="" && dvarFloat(playerHealth)<=0); \
			decoration \
		} \
		itemDef \
		{ \
			style				WINDOW_STYLE_SHADER \
			rect				(((playerItem-1)*(DEADALIVE_HEIGHT+1))) DEADALIVE_Y  DEADALIVE_HEIGHT DEADALIVE_HEIGHT HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER \
			origin			DEADALIVE_RIGHT \
			background	"hud_xpticker480ws" \			
			forecolor		0.3 0.3 0.7 .9 \	
			border			0 \
			visible			when (dvarString(playerName)!="" && dvarFloat(playerHealth)>0); \
			decoration \
		} 
		
		
		#define LB_AXIS_PLAYER( playerItem, playerName, playerHealth ) \
		itemDef \
		{ \
			style				WINDOW_STYLE_SHADER \
			rect				(-((playerItem-1)*(DEADALIVE_HEIGHT+1))) DEADALIVE_Y  DEADALIVE_HEIGHT DEADALIVE_HEIGHT HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER \
			origin			DEADALIVE_LEFT \
			background	"hud_xpticker480" \
			forecolor		1 1 1 .9 \
			border			0 \
			visible			when (dvarString(playerName)!="" && dvarFloat(playerHealth)<=0); \
			decoration \
		} \
		itemDef \
		{ \
			style				WINDOW_STYLE_SHADER \
			rect				(-((playerItem-1)*(DEADALIVE_HEIGHT+1))) DEADALIVE_Y  DEADALIVE_HEIGHT DEADALIVE_HEIGHT HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER \
			origin			DEADALIVE_LEFT \
			background	"hud_xpticker480ws" \
			forecolor		0.5 0.2 0.2 .9 \	
			border			0 \
			visible			when (dvarFloat(playerHealth)>0); \
			decoration \
		} 

		LB_ALLIES_PLAYER( 1, "lb_allies_p1", "lb_allies_h1" )
		LB_ALLIES_PLAYER( 2, "lb_allies_p2", "lb_allies_h2" )
		LB_ALLIES_PLAYER( 3, "lb_allies_p3", "lb_allies_h3" )
		LB_ALLIES_PLAYER( 4, "lb_allies_p4", "lb_allies_h4" )
		LB_ALLIES_PLAYER( 5, "lb_allies_p5", "lb_allies_h5" )
		LB_ALLIES_PLAYER( 6, "lb_allies_p6", "lb_allies_h6" )
		
		
		LB_AXIS_PLAYER( 1, "lb_axis_p1", "lb_axis_h1" )
		LB_AXIS_PLAYER( 2, "lb_axis_p2", "lb_axis_h2" )
		LB_AXIS_PLAYER( 3, "lb_axis_p3", "lb_axis_h3" )
		LB_AXIS_PLAYER( 4, "lb_axis_p4", "lb_axis_h4" )
		LB_AXIS_PLAYER( 5, "lb_axis_p5", "lb_axis_h5" )
		LB_AXIS_PLAYER( 6, "lb_axis_p6", "lb_axis_h6" )
		//------------------------------------------------------------------
		
		itemDef
 	   	{
			name			"mini_map"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_COMPASS_MAP
			visible when ( (dvarint( ui_hud_hardcore_show_minimap ) == 1 || ALLIES_HAVE_UAV || AXIS_HAVE_UAV || CLIENT_HAS_UAV || dvarInt( g_compassShowEnemies ) ) && NOT_SPECTATING && !selecting_location() );
			decoration
 	   	}
		// Objective pointers
		itemDef
		{
			name			"compasspointers"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"objective_line"
			ownerdraw		CG_PLAYER_COMPASS_POINTERS
			visible when ( ( dvarint( ui_hud_hardcore_show_minimap ) == 1 || ALLIES_HAVE_UAV || AXIS_HAVE_UAV || CLIENT_HAS_UAV || dvarInt( g_compassShowEnemies ) ) && NOT_SPECTATING && !selecting_location() && dvarint( ui_hud_showobjicons ) > 0 );
			decoration
		}
 	   	// Friendlies pointers
		itemDef
		{
			name			"compassfriendlies"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_FRIENDS
			visible when ( (dvarint( ui_hud_hardcore_show_minimap ) == 1 || ALLIES_HAVE_UAV || AXIS_HAVE_UAV || CLIENT_HAS_UAV || dvarInt( g_compassShowEnemies ) ) && NOT_SPECTATING && !selecting_location() );
		}
		// Enemy pings
		itemDef
		{
			name			"compassenemies"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_ENEMIES
			visible when ( ( ( ( dvarint( ui_hud_hardcore_show_minimap ) == 1 ) && dvarint( ui_minimap_show_enemies_firing ) == 1 ) || ALLIES_HAVE_UAV || AXIS_HAVE_UAV || CLIENT_HAS_UAV || dvarInt( g_compassShowEnemies ) ) && NOT_SPECTATING && !selecting_location() );
			//visible when ( dvarInt( g_compassShowEnemies ) && NOT_SPECTATING && !selecting_location());
		}
		// Player direction indicator
		itemDef
		{
			name			"compassplayer"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1//HUD_FOREGROUND_ALPHA
			background		"compassping_player"
			ownerdraw		CG_PLAYER_COMPASS_PLAYER
			visible when ( (dvarint( ui_hud_hardcore_show_minimap ) == 1 || ALLIES_HAVE_UAV || AXIS_HAVE_UAV || CLIENT_HAS_UAV || dvarInt( g_compassShowEnemies ) ) && NOT_SPECTATING && !selecting_location() );
		}
	}

	//broadcaster menu
	menuDef
	{
		name			"xpbar"
		rect			BOTTOM_RECT_X BOTTOM_RECT_Y 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible 		0//when( dvarInt( ui_broadcaster ) == 1 && !ui_active() && team( name ) == "TEAM_SPECTATOR" && !isIntermission() && !inkillcam() );

		itemDef
		{
			name			"minimapBG"
			rect			(MINIMAP_X_MP - 14) (MINIMAP_Y_MP - 6) COMPASS_SIZE_MP COMPASS_SIZE_MP HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"minimap_background"
			ownerdraw		CG_PLAYER_COMPASS_BACK
			visible when (SPECTATING)
			decoration
		}
	
		itemDef
 	   	{
			name			"mini_map"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_COMPASS_MAP
			visible when( SPECTATING)
			decoration
 	   	}
		// Objective pointers
		itemDef
		{
			name			"compasspointers"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP  HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"objective_line"
			ownerdraw		CG_PLAYER_COMPASS_POINTERS
			visible when ( SPECTATING)
			decoration
		}
 	   	// Friendlies pointers
		itemDef
		{
			name			"compassfriendlies"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_FRIENDS
			visible when ( SPECTATING)
		}
		// Enemy pings
		itemDef
		{
			name			"compassenemies"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_ENEMIES
			visible when ( SPECTATING)
		}

		// Player direction indicator
		itemDef
		{
			name			"compassplayer"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1//HUD_FOREGROUND_ALPHA
			background		"compassping_player"
			ownerdraw		CG_PLAYER_COMPASS_PLAYER
			visible when ( SPECTATING)
		}

		#define 	SCOREBAR_OFFSET 0 30
		// GAME TIMER FLYBY
		itemDef
		{
			rect		0 -3 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			forecolor	1 1 1 1
			textscale	0.4
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			visible 	when (  !spectatingClient() && timeLeft() >= 60 && !dvarBool( ui_bomb_timer ));
			decoration
		}
		itemDef
		{
			rect		0 -3 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			forecolor	1 0.75 0 1
			visible 	when ( !spectatingClient() && timeLeft() >= 30 && timeLeft() < 60 && !dvarBool( ui_bomb_timer ) );
			decoration
		}
		itemDef
		{
			rect		0 -3 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( secondsAsCountdown( timeLeft() ));
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			forecolor	1 0.5 0 1
			visible 	when (  !spectatingClient() && (timeLeft() >= 0 && timeLeft() < 30) || dvarBool( ui_bomb_timer ));
			decoration
		}
	//TIMER SPECTA ONLY
		itemDef
		{
			rect		40 -45 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
			origin		SCOREBAR_OFFSET
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when ( spectatingClient() &&  timeLeft() >= 60 && !dvarBool( ui_bomb_timer ));
			decoration
		}
		itemDef
		{
			rect		40 -45 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
			origin		SCOREBAR_OFFSET
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.75 0 1
			visible 	when ( spectatingClient() &&  timeLeft() >= 30 && timeLeft() < 60 && !dvarBool( ui_bomb_timer ));
			decoration
		}
		itemDef
		{
			rect		40 -45 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
			origin		SCOREBAR_OFFSET
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.5 0 1
			visible 	when ( spectatingClient() && (timeLeft() >= 0 && timeLeft() < 30) || dvarBool( ui_bomb_timer ) );
			decoration
		}			
	
		#undef SCOREBAR_OFFSET
		#define 	SCOREBAR_OFFSET 0 0

		// 0 Distan 0 Alt
		itemDef 
		{
			rect		50 -20 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
			origin		SCOREBAR_OFFSET
			exp		text( locString( "@OW_LB_ROUND", dvarint( "lb_round" ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when (NOT_SPECTATING);
			decoration 
		}
				
			
		itemDef
		{
			rect		100 20 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text( "DEFENSE" );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	0.3 1 0.3 1
			visible 	when(isIntermission())
			decoration
		}
		
		itemDef
		{
			rect		-100 20 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text( "DEFENSE" );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	0.3 1 0.3 1
			visible 	when(!isIntermission())
			decoration
		}

		itemDef
		{
			rect		100 20 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text( "ATTACK" );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	0.3 1 0.3 1
			visible 	when(!isIntermission())
			decoration
		}
	
		itemDef
		{
			rect		-100 20 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text( "ATTACK" );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	0.3 1 0.3 1
			visible 	when(isIntermission())
			decoration
		}
	
		// ALLIES ICON AND SCORE	
		itemDef 
		{
			rect		-163 25 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( marinesfield( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.6
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	1
			decoration 
		}


		// AXIS ICON AND SCORE

		itemDef
		{
			rect		160 25 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( opforfield( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.6
			textalign	ITEM_ALIGN_RIGHT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	1
			decoration 
		}
	}
	
	#define SCOREBAR_ORIGIN 0 -7
	#define ESCOREBAR_ORIGIN 8 -6

	#define SCORE_OFFSET_X	4
	#define SCORE_OFFSET_Y	2

	#define TEAM_IS_TIED	(team(score) == otherteam(score))
	#define TEAM_IS_WINNING (team(score) > otherteam(score))
	#define TEAM_IS_LOSING	(team(score) < otherteam(score))

	#define PLAYER_IS_TIED		(player(score) == scoreatrank(1) && scoreatrank(1) == scoreatrank(2))
	#define PLAYER_IS_WINNING	(player(score) > scoreatrank(2))
	#define PLAYER_IS_LOSING	(player(score) < scoreatrank(1))

	#define SHOULD_DISPLAY_SCOREBAR (team( name ) != "TEAM_SPECTATOR")
	
//Daqui tudo foi corrigido
	// Bottom bar
	menuDef
	{
		name			"scorebars"
		rect			(BOTTOM_RECT_X+SCORE_OFFSET_X) (BOTTOM_RECT_Y+SCORE_OFFSET_Y) 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		exp				rect Y( BOTTOM_RECT_Y - (ONLINEGAME * ONLINEGAME_OFFSET) );
		fullScreen		0
		visible 		when( !inkillcam() && !ui_active() && dvarbool(ui_end) && team( name ) != "TEAM_SPECTATOR" );

		//NOVO TIMER CENTRO
		//Timer com Tempo normal branco
		//12 0 padrao topo
		itemDef //Timer CENTER
		{	//Valor  X Y  lados  - updown
			rect		-40 -450 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
			origin		12 460
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor 1 1 1 1 //1 0.75 0 HUD_FOREGROUND_ALPHA
			visible 	when ( !dvarBool( ui_bomb_timer ) && (timeLeft() > 0) && team( name ) != "TEAM_SPECTATOR");
			decoration
		}
		//Timer com Tempo Restande da Bomba laranja
		itemDef
		{
			rect		-40 -450 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
			origin		12 460
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.5 0 1
			visible 	when ( dvarBool( ui_bomb_timer ) && team( name ) != "TEAM_SPECTATOR");
			decoration
		}
		//BLACKBOXTIMER	
		itemDef
		{
			origin		12 460
			rect			-40 -450 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
			background	"black"
			visible			1
			decoration
		}
	
	/*itemDef
	{
		exp text("SHIT TAUNTS 01")
		exp material("black")
		style			WINDOW_STYLE_FILLED
		rect			-140 -450 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
		textstyle		ITEM_TEXTSTYLE_NORMAL
		textfont		UI_FONT_DEFAULT
		textalign		ITEM_ALIGN_LEFT
		textalignx		5
		textaligny		20
		textscale		0.4
		backcolor		0 0 0 1
		forecolor		1 1 1 1
		visible			1
		decoration
	}*/
		
		/*itemDef
		{
			name			"minimapTickerBorder"
			//X  Y(maior mais desce)
			rect			-55 238 102 14 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			origin 			0 0
			forecolor		1 1 1 1
			background		"minimap_tickertape_background"
			ownerdraw		CG_PLAYER_COMPASS_BACK
			visible 1
			decoration
		}
		
		itemDef
		{
			name			"minimapTicker"
			rect			-55 238 102 9 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			origin 			0 0
			forecolor		1 1 1 1
			background		"minimap_tickertape_mp"
			ownerdraw		CG_PLAYER_COMPASS_TICKERTAPE_NO_OBJ
			visible 1
			decoration
		}*/
		
	}
	
	#define WEAPINFO_X -4
	#define WEAPINFO_Y -36

	menuDef
	{
		name			"weaponinfo"
		rect			BOTTOM_RECT_X BOTTOM_RECT_Y 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_BOTTOM
		exp				rect Y( BOTTOM_RECT_Y - (ONLINEGAME * ONLINEGAME_OFFSET) );
		fullScreen		0
		visible			when( !inkillcam() && !flashbanged() && !ui_active() && team( name ) != "TEAM_SPECTATOR" || spectatingClient());
		
		/*itemDef
		{
			rect 0 36 1 1 2 8
			origin 0 400
			forecolor 1 1 1 1
			textfont 9
			textalign ITEM_ALIGN_CENTER
			textscale 0.5833
			textstyle ITEM_TEXTSTYLE_SHADOWEDMORE
			exp text ( dvarString(ui_killcammsg) );
			visible 1
			decoration
		}
		*/
		itemDef
		{
	 		name			"streaks"
			rect			-75 -55 70 40
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textscale		0.2
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 1
			exp text ( "STREAK: " + dvarString(ui_currstreak) );
			visible when ( stat(3166) == 1 );
   			decoration
		}
		
		itemDef
		{
	 		name			"pocketmoney"
			rect			-75 -40 70 40
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textscale		0.2
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 1
			exp text ( "POCKET($): " + stat(3477));
			visible  when ( stat(3166) == 1 );
   			decoration
		}
		
		itemDef
		{
	 		name			"clipGraphic"
			rect			-75 0 70 40
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textscale		TEXTSIZE_SMALL
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_AMMO_VALUE
			visible  when ( stat(3166) == 1 );
   			decoration
		}

		itemDef
		{
			name			"offhandFragIcon"
			rect			(WEAPINFO_X -36) (WEAPINFO_Y -5) 24 24
			forecolor		1 1 1 HUD_ALPHA
			ownerdraw		CG_OFFHAND_WEAPON_ICON_FRAG
			background		"hud_us_grenade" // default texture
			visible			when ( stat(3166) == 1 );
			decoration
		}

		itemDef
		{
			name			"offhandSmokeIcon"
			rect			(WEAPINFO_X -66) (WEAPINFO_Y -5) 24 24
			forecolor		1 1 1 HUD_ALPHA
			ownerdraw		CG_OFFHAND_WEAPON_ICON_SMOKEFLASH
			background		"hud_us_smokegrenade" // default texture
			visible			when ( stat(3166) == 1 );
			decoration
		}
		
		itemDef
		{
			name			"offHandFragAmmo"
			rect			(WEAPINFO_X -14) (WEAPINFO_Y +20) 25 25
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			ownerdraw		CG_OFFHAND_WEAPON_AMMO_FRAG
			visible			when ( stat(3166) == 1 );
			decoration
		}

		itemDef
		{
			name			"offHandSmokeAmmo"
			rect			(WEAPINFO_X -45) (WEAPINFO_Y +20) 25 25
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			ownerdraw		CG_OFFHAND_WEAPON_AMMO_SMOKEFLASH
			visible			when ( stat(3166) == 1 );
			decoration
		}
	}

	// Full Screen Map for location selection
	#define FULL_SCREEN_MAP_WIDTH 400
	#define FULL_SCREEN_MAP_HEIGHT 400
	menuDef
	{
		name			"FullScreenMap"
 	   	rect			-100 -100 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
 	   	fullScreen		0
  	   	visible			1

		#define FSM_VISIBILITY (selecting_location() && NOT_SPECTATING)

		itemDef
 	   	{
			name			"map_map"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_FULLMAP_MAP
			visible			when( FSM_VISIBILITY );
			decoration
 	   	}
		itemDef
 	   	{
			name			"map_locator"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_FULLMAP_LOCATION_SELECTOR
			visible			when( FSM_VISIBILITY );
			decoration
 	   	}
		// Objective pointers
		itemDef
		{
			name			"mappointers"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"objective_line"
			ownerdraw		CG_PLAYER_FULLMAP_POINTERS
			visible			when( FSM_VISIBILITY );
			decoration
		}
 	   	// Friendlies pointers
		itemDef
		{
			name			"mapfriendlies"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_FULLMAP_FRIENDS
			visible			when( FSM_VISIBILITY );
		}
 	   	// Enemies pointers
		itemDef
		{
			name			"mapenemies"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_FULLMAP_ENEMIES
			visible			when( FSM_VISIBILITY );
		}
		// Player direction indicator
		itemDef
		{
			name			"mapplayer"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compassping_player"
			ownerdraw		CG_PLAYER_FULLMAP_PLAYER
			visible			when( FSM_VISIBILITY );
		}

		// border
		itemDef
		{
			name			"mapborder"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"map_border"
			ownerdraw		CG_PLAYER_FULLMAP_BORDER
			visible			when( FSM_VISIBILITY );
			decoration
		}

		// instruction
		itemDef
		{
			name			"airstrikeinstruction"
			rect			100 -60 20 20
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_CENTER
			textscale		0.4
			forecolor		1 1 1 1
			text			"@PLATFORM_PRESS_TO_SET_AIRSTRIKE"
			visible			0//when( FSM_VISIBILITY );
			decoration
		}
	}

	#define	DPAD_BASE_SIZE		28
	#define	DPAD_BASE_SIZE_HALF	14
	#define DPAD_ICON_Y			-1//3
	#define DPAD_LABEL_Y		40//44
	#define DPAD_ICON_SPACING	60

	menuDef
	{
		name			"DPad"
		rect			BOTTOM_RECT_X BOTTOM_RECT_Y 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_BOTTOM
		exp				rect Y( BOTTOM_RECT_Y - (ONLINEGAME * ONLINEGAME_OFFSET) );
 	   	fullScreen		0
		visible			when( !inkillcam() && !flashbanged() && !ui_active() && !scoped() && (dvarString( createfx ) != "on") );


		itemDef
		{
			name			"slot3"
			rect			(WEAPINFO_X -128) (WEAPINFO_Y -7) DPAD_BASE_SIZE DPAD_BASE_SIZE
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_LEFT
			textfont		UI_FONT_DEFAULT
			forecolor		1 1 1 HUD_ALPHA
			ownerdraw		CG_PLAYER_ACTIONSLOT_3
			visible			when ( stat(3166) == 1 );
			decoration
		}
		

		itemDef
		{
			name			"slot4"
			rect			(WEAPINFO_X -156) (WEAPINFO_Y -7) DPAD_BASE_SIZE DPAD_BASE_SIZE
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_LEFT
			textfont		UI_FONT_DEFAULT
			forecolor		1 1 1 HUD_ALPHA
			ownerdraw		CG_PLAYER_ACTIONSLOT_4
			visible			when ( stat(3166) == 1 );
			decoration
		}

    }
//	============HUDKILLCAM==============
	menuDef
	{
		name "killcam"
		rect 0 0 640 480 4 4
		forecolor 1 1 1 1
		visible when( inkillcam() )
		//KILLCAM NORMAL
		itemDef
		{
			//TOPO
			rect 0 0 640 40 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
			style WINDOW_STYLE_SHADER
			forecolor 0.49 0.05 0.03 0.7
			background "white"
			visible when ( !dvarint( "scr_gameended" ) )
			decoration
		}
		
		itemDef
		{
			rect 0 450 640 40 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
			style WINDOW_STYLE_SHADER
			forecolor 0.49 0.05 0.03 0.7
			background "white"
			visible when ( !dvarint( "scr_gameended" ) )
			decoration
		}

		//textos
		itemDef
		{
			rect 0 36 1 1 2 8
			forecolor 1 1 1 1
			textfont 9
			textalign ITEM_ALIGN_CENTER
			textscale 0.9
			textstyle ITEM_TEXTSTYLE_SHADOWEDMORE
			text "@OW_KILLCAM"
			visible when ( !dvarint( "scr_gameended" ) )
			decoration
		}
		//KILLCAM FINAL CINZA
		itemDef
		{
		//TOPO
			rect 0 0 640 60 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
			style WINDOW_STYLE_SHADER
			visible 1
			forecolor 0 0 0 0.8
			background "white"
			visible when ( dvarint( "scr_gameended" ) )
			decoration
		}
		itemDef
		{
			rect 0 450 640 40 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
			style WINDOW_STYLE_SHADER
			forecolor 0 0 0 0.8
			background "white"
			visible when ( dvarint( "scr_gameended" ) )
			decoration
		}
		itemDef
		{
			rect 0 36 1 1 2 8
			forecolor 1 1 1 1
			textfont 9
			textalign ITEM_ALIGN_CENTER
			textscale 0.5833
			textstyle ITEM_TEXTSTYLE_SHADOWEDMORE
			text "@OW_FINAL_KILLCAM"
			visible when ( dvarint( "scr_gameended" ) == 1)//tem q ficar assim == 1
			decoration
		}
		itemDef
		{
			rect 0 36 1 1 2 8
			forecolor 1 1 1 1
			textfont 9
			textalign ITEM_ALIGN_CENTER
			textscale 0.5833
			textstyle ITEM_TEXTSTYLE_SHADOWEDMORE
			text "@OW_ROUND_KILLCAM"
			visible when ( dvarint( "scr_gameended" ) == 2 )
			decoration
		}
		//killer msg
		itemDef
		{
			rect 0 36 1 1 2 8
			origin 0 440
			forecolor 1 1 1 1
			textfont 9
			textalign ITEM_ALIGN_CENTER
			textscale 0.5833
			textstyle ITEM_TEXTSTYLE_SHADOWEDMORE
			exp text ( dvarString(ui_killcammsg) );
			visible when ( dvarint( "scr_gameended" ) )
			decoration
		}		
	}

	// Center obituary (you killed/were killed by)
	menuDef
	{
		name			"CenterObituary"
		rect			0 150 0 0 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible		0//	when ( !dvarbool(sv_cheats) || dvarint( ui_hud_show_center_obituary ) == 1 );

		itemDef
		{
			name			"chRect"
			rect			0 0 0 0
			textscale		TEXTSIZE_DEFAULT
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_CENTER_MESSAGE
			visible			1
			decoration
		}
	}

	// Score Bar
	menuDef
	{
		name			"scorebar"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible 		when ( ( ( team( name ) == "TEAM_ALLIES" || team( name ) == "TEAM_AXIS" ) && !inkillcam() && NOT_SPECTATING && !menuisopen( background_main ) && !menuisopen( background_systemlink ) && !menuisopen( scoreboard )) && dvarInt( ui_hud_hardcore ) == 0 && (dvarInt( "ui_score_bar" ) || team( name ) == "TEAM_SPECTATOR" || (dvarInt( "ui_timelimit" ) > 0 && timeLeft() < 0) || (timeLeft() >= 0 && (timeLeft() % 60 < 5 || timeLeft() < 60)) || (timeLeft() < 0 && (timeLeft() % 60 > (0-5))) || (dvarInt( "ui_scorelimit" ) > 0 && max( marinesfield( score ), opforfield( score ) ) / dvarInt( "ui_scorelimit" ) > 0.75 ) ) );

		#define BARWIDTH	400

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			(-BARWIDTH/2) 3 BARWIDTH 18 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			background		"line_horizontal"
			forecolor		0 0 0 1
			visible			0
			decoration
		}

		/*itemDef
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		0 20
			exp			text( locString( "@OW_SCORE_WINNING", team( score ), otherteam( score ) ) );//exp text( "Winning " + team( score ) + " - " + otherteam( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	0.3 1 0.3 1
			visible 	when( team( score ) > otherteam( score ) )
			decoration
		}
		itemDef
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		0 20
			exp			text( locString( "@OW_SCORE_LOSING", otherteam( score ), team( score ) ) );//exp text( "Losing " + otherteam( score ) + " - " + team( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.3 0.3 1
			visible 	when( team( score ) < otherteam( score ) )
			decoration
		}
		itemDef
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		0 20
			exp			text( locString( "@OW_SCORE_TIED", team( score ), otherteam( score ) ) );//exp text( "Tied " + team( score ) + " - " + otherteam( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 1 0.3 1
			visible 	when( team( score ) == otherteam( score ) )
			decoration
		}*/
	}

	// game messages
	menuDef
	{
		name			"gamemessages"
		// (todo: use VERTICAL_ALIGN_TOP in SP)
		rect			6 -65 10 10 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
		fullScreen		0
		visible			when( !inkillcam() || !dvarbool(sv_cheats));

		itemDef
		{
			origin				0 0 //X  Y+ DESCE
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	0
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_DEFAULT
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_LEFT
			textscale			(TEXTSIZE_SMALL*0.75)
			visible				when ( dvarint( ui_hud_obituaries ) == 1 && dvarint( ui_gamemessagehud ) == 0 && !ui_active() );
		}
		itemDef
		{
			origin				750 -300 //X  Y+ DESCE
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	0
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_DEFAULT
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_RIGHT
			textscale			(TEXTSIZE_SMALL*0.75)
			visible				when ( dvarint( ui_hud_obituaries ) == 1 && dvarint( ui_gamemessagehud ) == 1 && !ui_active() );
		}
	}
	
	menuDef
	{
		name			"boldgamemessages"
		// (todo: use VERTICAL_ALIGN_TOP in SP, origin 0 180)
		rect			0 -60 10 10 HORIZONTAL_ALIGN_CENTER_SAFEAREA VERTICAL_ALIGN_CENTER_SAFEAREA
		fullScreen		0
		visible			when( !inkillcam()  || !dvarbool(sv_cheats));

		itemDef
		{
			origin				0 0
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	1
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_OBJECTIVE
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_CENTER
			textscale			0.35 // SP: 0.5
			visible				when ( dvarint( ui_hud_obituaries ) == 1 && !ui_active() );
		}
	}

	//Cheater graphic
/*   menuDef 
   {
		#define COMPLEQU (dvarint(compassplayerheight) != dvarint(compassplayerwidth)) 
		#define COMFREQU (dvarint(compassfriendlyheight) != dvarint(compassfriendlywidth)) 
		#define FPS (dvarint( com_maxfps ) > 250 || dvarint( com_maxfps ) < 70 )
		#define MAXPACKETS (dvarint(cl_maxpackets) < 63)
		#define DLIGHT (dvarint(r_dlightlimit) < 2)
		#define RLOAD (dvarint(r_lodscaleskinned) > 2) 
		#define RLOD (dvarint(r_lodscalerigid) > 2)
		#define RATE (dvarint(rate) < 25000) 
		#define HICONH (dvarint(cg_huddamageiconheight) != 64)
		#define ZNEAR (dvarint(r_znear) != 4)
		#define HICONW (dvarint(cg_huddamageiconwidth) != 128)
		#define HICONSCOPE (dvarbool(cg_huddamageiconinscope))
		#define HICONOFF (dvarint(cg_huddamageiconoffset) != 128) 
		#define HDAMITIME (dvarint(cg_huddamageicontime) != 2000)
		#define VSMOOTH ((dvarint(cg_viewZSmoothingMin) != dvarint(cg_viewZSmoothingMax) / 16 && dvarfloat(cg_viewZSmoothingTime) != 0.1))
		#define NOPREDICT (dvarbool(cg_nopredict))
		#define CHEATS (!dvarbool(sv_cheats))
		#define FINALKILLCAM (!inkillcam())
      
	  name  "subtitles"
	  style	WINDOW_STYLE_FILLED
	  rect	FULLSCREEN_WIDE
	 // exp text "CFG CONTEM COMANDOS INVALIDOS !"
      background	"$levelBriefing" // block fullbright glitch
      soundloop "mouse_click"
	  backcolor	1 1 1 1
	  visible 	when ((CHEATS || FINALKILLCAM) && (MAXPACKETS || ZNEAR || FPS || RLOAD || RLOD || RATE || HICONH || HICONW || HICONSCOPE || HICONOFF || HDAMITIME || VSMOOTH  || NOPREDICT)) 
   }*/

	// Safe area
	menuDef
	{
		name			"safeareaa"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible		1

		#include "ui/safearea.menu"
	}
}
